# This workflow uses actions that are not certified by GitHub. They are provided
# by a third-party and are governed by separate terms of service, privacy
# policy, and support documentation.
name: Scorecard supply-chain security
on:
  # For Branch-Protection check. Only the default branch is supported. See
  # https://github.com/ossf/scorecard/blob/main/docs/checks.md#branch-protection
  branch_protection_rule:
  # To guarantee Maintained check is occasionally updated. See
  # https://github.com/ossf/scorecard/blob/main/docs/checks.md#maintained
  schedule:
    - cron: '17 13 * * 3'
  push:
    branches: [ "main" ]
# Declare default permissions as read only.
permissions: read-all
jobs:
  analysis:
    name: Scorecard analysis
    runs-on: ubuntu-latest
    # `publish_results: true` only works when run from the default branch. conditional can be removed if disabled.
    if: github.event.repository.default_branch == github.ref_name || github.event_name == 'pull_request'
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
      # Needed to publish results and get a badge (see publish_results below).
      id-token: write
      # Uncomment the permissions below if installing in a private repository.
      contents: read
      actions: read
    steps:
      - name: "Checkout code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      
      - name: "Install Scorecard"
        run: |
          # Get the latest release info
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/ossf/scorecard/releases/latest)
          VERSION=$(echo $LATEST_RELEASE | grep -o '"tag_name": "[^"]*' | grep -o '[^"]*$' | sed 's/^v//')

          
          # Download the Linux AMD64 binary
          wget https://github.com/ossf/scorecard/releases/download/v${VERSION}/scorecard_${VERSION}_linux_amd64.tar.gz
          
          # Extract and install
          tar -xzf scorecard_${VERSION}_linux_amd64.tar.gz
          chmod +x scorecard
          sudo mv scorecard /usr/local/bin/scorecard
          
          # Verify installation
          scorecard --version
      
      - name: "Run analysis"
        run: |
          # Run scorecard on the current repository
          scorecard --repo=github.com/${{ github.repository }} --format=sarif --output-file=results.sarif
        env:
          # Set GitHub token for API access
          GITHUB_TOKEN: ${{ secrets.SCORECARD_TOKEN }}
      
      # Upload the results as artifacts (optional). Commenting out will disable uploads of run results in SARIF
      # format to the repository Actions tab.
      - name: "Upload artifact"
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5
      # Upload the results to GitHub's code scanning dashboard (optional).
      # Commenting out will disable upload of results to your repo's Code Scanning dashboard
      - name: "Upload to code-scanning"
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
